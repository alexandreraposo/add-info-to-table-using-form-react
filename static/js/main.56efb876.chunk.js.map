{"version":3,"sources":["components/Header/Header.js","components/InputTechnology/InputTechnology.js","components/InputExperience/InputExperience.js","components/ButtonAdd/ButtonAdd.js","components/Table/Table.js","components/MsgValidation/MsgValidation.js","components/Footer/Footer.js","components/PopUpDelete/PopUpDelete.js","App.js","index.js"],"names":["Header","className","InputTechnology","props","htmlFor","name","type","value","onChange","InputExperience","ButtonAdd","onClick","Table","myColumn","tableColumn","map","column","key","myRow","roles","role","index","tech","exp","openPopUpDelete","MsgValidation","msgEmpty","msgEmptyTech","msgTechExist","msgEmptyExp","Footer","id","PopUpDelete","closePopUpDelete","removePopUpDelete","App","useState","technology","experience","inputValues","setInputValues","rowIndex","setRowIndex","setRoles","setMsgEmpty","setMsgEmptyTech","setMsgTechExist","setMsgEmptyExp","visible","setVisible","useEffect","techExists","forEach","element","toLowerCase","event","target","preventDefault","push","console","log","splice","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.56efb876.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport \"./Header.css\";\r\n\r\nexport const Header = () => {\r\n    return(\r\n        <header className=\"container-header\">\r\n            <h2>Tecnologias e Experiência</h2>\r\n        </header>\r\n    );\r\n};","import React from 'react';\r\n\r\nimport \"./InputTechnology.css\";\r\n\r\nexport const InputTechnology = (props) => {\r\n    return(\r\n        <>\r\n        <label className=\"label-tech\" htmlFor=\"technology\">Tecnologia:</label>\r\n          <br />\r\n          <input\r\n            className=\"input-tech\"\r\n            name=\"technology\"\r\n            type=\"text\"\r\n            value={props.value}\r\n            onChange={props.onChange}\r\n          />\r\n        </>\r\n    );\r\n};","import React from 'react';\r\n\r\nimport \"./InputExperience.css\";\r\n\r\nexport const InputExperience = (props) => {\r\n    return(\r\n        <>\r\n        <label className=\"label-exp\" htmlFor=\"experience\">Experiência:</label>\r\n          <br />\r\n          <input\r\n            className=\"input-exp\"\r\n            name=\"experience\"\r\n            type=\"text\"\r\n            value={props.value}\r\n            onChange={props.onChange}\r\n          />\r\n        </>\r\n    );\r\n};","import React from 'react';\r\n\r\nimport \"./ButtonAdd.css\";\r\n\r\nexport const ButtonAdd = (props) => {\r\n    return(\r\n        <>\r\n        <button\r\n            className=\"btn-addInfo\"\r\n            type=\"submit\"\r\n            onClick={props.onClick}\r\n        >ADD\r\n        </button>\r\n        </>\r\n    );\r\n};","import React from 'react';\r\n\r\nimport \"./Table.css\";\r\n\r\nexport const Table = (props) => {\r\n    const myColumn = props.tableColumn.map((column) => <th key={column}>{column}</th>);\r\n\r\n    const myRow = props.roles.map((role, index) => (\r\n        <tr key={role.tech}>\r\n          <td>{role.tech}</td>\r\n          <td>{role.exp}</td>\r\n          <td>\r\n            <button\r\n              className=\"btn-removeInfo\"\r\n              type=\"submit\"\r\n              onClick={() => props.openPopUpDelete(index)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      ));\r\n\r\n    return(\r\n        <div className=\"container-table\">\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        {myColumn}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {myRow}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\n\r\nimport \"./MsgValidation.css\";\r\n\r\nexport const MsgValidation = (props) => {\r\n    return (\r\n        <>\r\n            <p className=\"msg-empty\">{props.msgEmpty}</p>\r\n            <p className=\"msg-empty-technology\">{props.msgEmptyTech}</p>\r\n            <p className=\"msg-technology-exist\">{props.msgTechExist}</p>\r\n            <p className=\"msg-empty-experience\">{props.msgEmptyExp}</p>\r\n        </>\r\n    );\r\n};","import React from 'react';\r\n\r\nimport \"./Footer.css\";\r\n\r\nexport const Footer = () => {\r\n    return(\r\n        <footer id=\"container-footer\">\r\n            <h4>© 2020 Copyright - Alexandre Raposo</h4>\r\n        </footer>\r\n    );\r\n};","import React from 'react';\r\n\r\nimport \"./PopUpDelete.css\";\r\n\r\nexport const PopUpDelete = (props) => {\r\n  return(\r\n    <div className=\"pop-up-container\">\r\n      <div className=\"pop-up-delete\">\r\n        <button className=\"close\" onClick={props.closePopUpDelete}>x</button>\r\n        <h3 className=\"text-delete\">Deseja mesmo eliminar essa tecnologia?</h3>\r\n        <button className=\"btn-delete\" type=\"submit\" onClick={props.removePopUpDelete}>Delete</button>\r\n        <button className=\"btn-cancel\" type=\"submit\" onClick={props.closePopUpDelete}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};","import React, { useState, useEffect } from \"react\";\r\nimport { Header } from \"./components/Header/Header\";\r\nimport { InputTechnology } from \"./components/InputTechnology/InputTechnology\";\r\nimport { InputExperience } from \"./components/InputExperience/InputExperience\";\r\nimport { ButtonAdd } from \"./components/ButtonAdd/ButtonAdd\";\r\nimport { Table } from \"./components/Table/Table\";\r\nimport { MsgValidation } from \"./components/MsgValidation/MsgValidation\";\r\nimport { Footer } from \"./components/Footer/Footer\";\r\nimport { PopUpDelete } from \"./components/PopUpDelete/PopUpDelete\";\r\n\r\nimport \"./App.css\";\r\n\r\nexport const App = () => {\r\n  const [inputValues, setInputValues] = useState({\r\n    technology: \"\",\r\n    experience: \"\",\r\n  });\r\n  const [tableColumn, setTableColumn] = useState([\r\n    \"Tecnologia\",\r\n    \"Experiência\",\r\n    \"Delete\",\r\n  ]); // Lista de colunas da tabela\r\n  const [rowIndex, setRowIndex] = useState(null);\r\n  const [roles, setRoles] = useState([]);\r\n  const [msgEmpty, setMsgEmpty] = useState(\"\");\r\n  const [msgEmptyTech, setMsgEmptyTech] = useState(\"\");\r\n  const [msgTechExist, setMsgTechExist] = useState(\"\");\r\n  const [msgEmptyExp, setMsgEmptyExp] = useState(\"\");\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let techExists = false;\r\n\r\n    roles.forEach((element) => {\r\n      if (inputValues.technology.toLowerCase() === element.tech.toLowerCase()) {\r\n        techExists = true;\r\n      }\r\n    });\r\n\r\n    if (techExists) {\r\n      setMsgEmptyTech(\"\");\r\n      setMsgTechExist(\"Essa tecnologia já se encontra registada!\");\r\n    } else {\r\n      setMsgEmptyTech(\"\");\r\n      setMsgTechExist(\"\");\r\n    }\r\n  }, [inputValues]);\r\n\r\n  const onChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setInputValues({ ...inputValues, [name]: value });\r\n  };\r\n\r\n  const onClick = (event) => {\r\n    event.preventDefault();\r\n\r\n    let techExists = false;\r\n\r\n    roles.forEach((element) => {\r\n      if (inputValues.technology.toLowerCase() === element.tech.toLowerCase()) {\r\n        techExists = true;\r\n      }\r\n    });\r\n\r\n    if (inputValues.technology === \"\" && inputValues.experience === \"\") {\r\n      setMsgEmptyTech(\"\");\r\n      setMsgEmptyExp(\"\");\r\n      setMsgEmpty(\r\n        \"É obrigatório introduzir uma tecnologia e a sua experiência!\"\r\n      );\r\n    } else if (inputValues.technology === \"\") {\r\n      setMsgEmpty(\"\");\r\n      setMsgEmptyExp(\"\");\r\n      setMsgEmptyTech(\"É obrigatório introduzir uma tecnologia!\");\r\n    } else if (techExists) {\r\n      setMsgEmptyExp(\"\");\r\n    } else if (inputValues.experience === \"\") {\r\n      setMsgEmpty(\"\");\r\n      setMsgEmptyTech(\"\");\r\n      setMsgEmptyExp(\"É obrigatório introduzir a sua experiência!\");\r\n    } else if (!techExists) {\r\n      roles.push({ tech: inputValues.technology, exp: inputValues.experience });\r\n      setRoles(roles);\r\n      setInputValues({ technology: \"\", experience: \"\" });\r\n      setMsgEmpty(\"\");\r\n      setMsgEmptyTech(\"\");\r\n      setMsgEmptyExp(\"\");\r\n      console.log(roles);\r\n    }\r\n  };\r\n  \r\n  const openPopUpDelete = (index) => {\r\n    if (visible === false) {\r\n      setRowIndex(index);\r\n      setVisible(true);\r\n      console.log(index);\r\n    }\r\n  };\r\n\r\n  const removePopUpDelete = () => {\r\n    if (visible)\r\n    roles.splice(rowIndex, 1);\r\n    setRowIndex(null);\r\n    setVisible(false);\r\n  }\r\n\r\n  const closePopUpDelete = () => {\r\n    if (visible === false) {\r\n      setVisible(true);\r\n    } else {\r\n      setVisible(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-grid\">\r\n      <Header />\r\n      <div className=\"container-form\">\r\n        <form>\r\n          <MsgValidation msgEmpty={msgEmpty} />\r\n          <InputTechnology value={inputValues.technology} onChange={onChange} />\r\n          <MsgValidation msgEmptyTech={msgEmptyTech} />\r\n          <MsgValidation msgTechExist={msgTechExist} />\r\n          <InputExperience value={inputValues.experience} onChange={onChange} />\r\n          <MsgValidation msgEmptyExp={msgEmptyExp} />\r\n          <br />\r\n          <ButtonAdd onClick={onClick} />\r\n          <br />\r\n        </form>\r\n      </div>\r\n      <Table tableColumn={tableColumn} roles={roles} openPopUpDelete={openPopUpDelete} />\r\n      <Footer />\r\n      {visible && (\r\n        <PopUpDelete\r\n          removePopUpDelete={removePopUpDelete}\r\n          closePopUpDelete={closePopUpDelete}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}